en:
  activerecord:
    attributes:
      mat_views/mat_view_definition:
        created_at: "Created at"
        dependencies: "Dependencies"
        name: "Name"
        refresh_strategy: "Refresh strategy"
        schedule_cron: "Schedule (cron)"
        sql: "SQL (SELECT ...)"
        unique_index_columns: "Unique index columns"
        updated_at: "Updated at"
      mat_views/mat_view_run:
        created_at: "Created at"
        details: "Details"
        duration_ms: "Duration (ms)"
        error: "Error"
        finished_at: "Finished at"
        mat_view_definition: "Definition"
        meta: "Metadata"
        operation: "Operation"
        row_count_after: "Row count after"
        row_count_before: "Row count before"
        rows_before_after: "Rows(before/after)"
        started_at: "Started at"
        status: "Status"
        updated_at: "Updated at"
    enums:
      mat_views/mat_view_definition:
        refresh_strategy:
          concurrent: "Concurrent"
          regular: "Regular"
          swap: "Swap"
      mat_views/mat_view_run:
        operation:
          create: "Create"
          drop: "Drop"
          refresh: "Refresh"
        status:
          failed: "Failed"
          running: "Running"
          success: "Success"
    errors:
      models:
        mat_views/mat_view_definition:
          attributes:
            name:
              blank: "must be provided"
              invalid: "is not a valid PostgreSQL identifier"
              taken: "must be unique"
            sql:
              blank: "must be provided"
              invalid: "must start with SELECT"
            unique_index_columns:
              at_least_one: "must have at least one column when using concurrent refresh strategy"
    hints:
      mat_views/mat_view_definition:
        dependencies: "Comma-separated list of tables or views this materialized view depends on."
        name: "Name of the materialized view in the database."
        refresh_strategy: "Determines how the materialized view is refreshed."
        schedule_cron: "Use standard cron format. Leave empty for no scheduling."
        sql: "The SQL query must be a valid SELECT statement."
        unique_index_columns: "Columns to create a unique index on. Required for concurrent refresh."
      mat_views/mat_view_run:
        error: "Error message if the run failed."
        meta: "Additional metadata in JSON format."
        operation: "Type of operation performed."
        status: "Current status of the run."
    models:
      mat_views/mat_view_definition: "Materialized View Definition"
      mat_views/mat_view_run: "Materialized View Run"
    placeholders:
      mat_views/mat_view_definition:
        dependencies: "Enter dependencies (comma separated, optional)"
        name: "Enter name"
        refresh_strategy: "Select refresh strategy"
        schedule_cron: "0 0 * * * for daily at midnight, leave empty for no scheduling"
        sql: "Enter SQL (SELECT ...)"
        unique_index_columns: "Enter unique index columns (comma separated, optional)"
      mat_views/mat_view_run:
        error: "Error message"
        mat_view_definition: "Select materialized view"
        meta: "Metadata (JSON)"
        operation: "Select operation"
        status: "Select status"
  i18n:
    languages:
      en-CA: English (Canada)
      en-US: English (United States)
  mat_views:
    actions: "Actions"
    all_definitions: "All definitions"
    all_operations: "All operations"
    all_statuses: "All statuses"
    cancel: "Cancel"
    close: "Close"
    close_window: "Close window"
    create: "Create"
    dashboard:
      metrics:
        title: "Metrics"
      title: "Dashboard"
    definition: "Definition"
    definitions: "Definitions"
    delete: "Delete"
    details: "Details"
    edit: "Edit"
    edit_var: "Edit %{name}"
    errors:
      frame_only: "This action can only be performed in a frame, redirected to dashboard."
      prevented_saving:
        one: "1 error prevented saving:"
        other: "%{count} errors prevented saving:"
    filter_by: "Filter by:"
    footer:
      copyright: "© %{year} %{company} All rights reserved."
      documentation: "Documentation"
      need_help: "Need guaranteed uptime & expert help?"
      open_issue: "Open an Issue"
      project_homepage: "Project Homepage"
      support: "Get Professional Support →"
      tagline: "Built with ❤️ by developers, for developers."
      tooltip:
        documentation: "Read the documentation"
        gem_version: "Click to visit the RubyGems page"
        open_issue: "Report a bug or request a feature"
        project_homepage: "Github repository"
        support: "Professional support plans"
      version: "v%{version}"
    header:
      signed_in_as: "Signed in as %{email}"
    history: "History"
    loading: "Loading..."
    loading_definitions: "Loading definitions..."
    loading_runs: "Loading runs..."
    mat_view_definition:
      create_mv: "Create MV"
      create_mv_tooltip: "Creates the materialized view in the database."
      delete_confirm: "Delete definition %{name}? (Does NOT drop MV)"
      delete_tooltip: "Deletes the definition but does NOT drop the materialized view in the database."
      drop_mv: "Drop MV"
      drop_mv_cascade: "Drop MV(Cascade)"
      drop_mv_cascade_confirm: "Drop materialized view and all dependent objects for %{name}?"
      drop_mv_cascade_tooltip: "Drops the materialized view and all dependent objects in the database. Definition remains."
      drop_mv_confirm: "Drop materialized view for %{name}?"
      drop_mv_tooltip: "Drops the materialized view in the database. Definition remains."
      edit_tooltip: "Edit materialized view definition."
      materialized_view: "Materialized View"
      materialized_view_exists: "Materialized view exists"
      materialized_view_not_exists: "Materialized view not created yet!"
      new_definition: "New definition"
      new_definition_tooltip: "Create a new materialized view definition."
      no_definitions: "No materialized view definitions found. Create one to get started."
      refresh_tooltip: "Refreshes the materialized view in the database."
      sql_summary_tooltip: "Click to expand/collapse SQL"
      view_tooltip: "View materialized view definition."
    mat_view_run:
      error_tooltip: "Error message if the run failed."
      meta_tooltip: "Additional metadata in JSON format."
      no_runs: "No runs found."
      no_runs_if_filtered: "No runs found for the selected filters."
      view_details: "View details"
      view_tooltip: "View run details."
    project_author: "Codevedas Inc."
    project_description: "Admin interface for managing PostgreSQL materialized views in Rails applications."
    project_tags: "rails, ruby, materialized views, admin, dashboard, ui, interface, management"
    refresh: "Refresh"
    refresh_contents: "Refresh contents"
    reloading: "Reloading..."
    reset: "Reset"
    run: "Run"
    runs: "Runs"
    save_changes: "Save changes"
    settings:
      auto: "Auto"
      dark: "Dark"
      language: "Language"
      language_hint: "Choose your interface language."
      light: "Light"
      theme: "Theme"
      theme_hint: "Auto follows your system preference, light and dark overrides it."
      title: "Preferences"
    title: "MatViews Admin"
    view_var: "View %{name}"
  time:
    am: "AM"
    formats:
      datetime12hour: "%Y-%m-%d %I:%M:%S %p"
    pm: "PM"
