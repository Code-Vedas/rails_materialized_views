name: Ruby Tests (reusable)

on:
  workflow_call:
    inputs:
      bundle_gemfile:
        required: false
        type: string
        description: Path (relative to the repository root) to the Gemfile to use.
      rspec_task:
        required: true
        type: string
        description: Command to run tests (e.g., bin/rspec-unit or bin/rspec-e2e)
      upload_coverage:
        required: false
        type: boolean
        default: false
    secrets:
      QLTY_COVERAGE_TOKEN:
        required: false
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && format('pr-unit-{0}', github.event.pull_request.number) || format('ref-unit-{0}', github.ref) }}-${{ inputs.bundle_gemfile }}
  cancel-in-progress: true
permissions:
  contents: read
env:
  RUBY_VERSION: 3.4.3
  APP_DIR: ${{ github.workspace }}/mat_views
  BUNDLE_GEMFILE: ${{ inputs.bundle_gemfile != '' && format('{0}/{1}', github.workspace, inputs.bundle_gemfile) || '' }}
jobs:
  test:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports: [5432:5432]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            build-essential git libpq-dev libyaml-dev pkg-config
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ${{ env.APP_DIR }}
      - name: Cache Bootsnap
        uses: actions/cache@v4
        with:
          path: ${{ env.APP_DIR }}/spec/dummy/tmp/cache
          key: bootsnap-${{ runner.os }}-${{ env.RUBY_VERSION }}-${{ hashFiles('**/Gemfile.lock', '**/*.gemfile.lock') }}-${{ inputs.bundle_gemfile || 'mat_views/Gemfile' }}
      - name: Prepare database
        working-directory: ${{ env.APP_DIR }}
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          bin/rails db:drop || true
          bin/rails db:create
          bin/rails db:schema:load
      - name: Run unit tests
        working-directory: ${{ env.APP_DIR }}
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: ${{ inputs.rspec_task }}
      - name: Publish coverage to Qlty
        if: ${{ inputs.upload_coverage }}
        uses: qltysh/qlty-action/coverage@v2
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: ${{ env.APP_DIR }}/coverage/.resultset.json
