permissions:
  contents: read
name: CI
on:
  pull_request:
  push:
    branches: [main]
concurrency:
  group: ci
  cancel-in-progress: true
jobs:
  lint:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/mat_views
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.3
          bundler-cache: true
          working-directory: ${{ github.workspace }}/mat_views

      - name: Lint code for consistent style
        run: bin/rubocop -f github
  reek:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/mat_views
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.3
          bundler-cache: true
          working-directory: ${{ github.workspace }}/mat_views

      - name: Check code smells with reek
        run: bin/reek

  test:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: [lint, reek]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=3

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.4.3
          bundler-cache: true
          working-directory: ${{ github.workspace }}/mat_views
      - name: Prepare database
        working-directory: ${{ github.workspace }}/mat_views
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rails db:drop && bin/rails db:create && bin/rails db:schema:load
      - name: Seed database
        working-directory: ${{ github.workspace }}/mat_views
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rails db:seed
      - name: Run tests
        working-directory: ${{ github.workspace }}/mat_views
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          # REDIS_URL: redis://localhost:6379/0
        run: bin/rspec

      - name: Upload simplecov report
        uses: actions/upload-artifact@v4
        with:
          name: simplecov-report
          path: ${{ github.workspace }}/mat_views/coverage
          if-no-files-found: ignore

      - uses: qltysh/qlty-action/coverage@v2
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: ${{ github.workspace }}/mat_views/coverage/.resultset.json

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/mat_views/tmp/screenshots
          if-no-files-found: ignore
