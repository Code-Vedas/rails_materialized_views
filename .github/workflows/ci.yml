name: CI
permissions:
  contents: read

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ci
  cancel-in-progress: false

env:
  RUBY_VERSION: 3.4.3
  APP_DIR: ${{ github.workspace }}/mat_views

jobs:
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.APP_DIR }}
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ${{ env.APP_DIR }}
      - run: bundle info rake

  lint:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: ${{ env.APP_DIR }}
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ${{ env.APP_DIR }}
      - name: RuboCop
        run: bin/rubocop -f github

  reek:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs: setup
    defaults:
      run:
        working-directory: ${{ env.APP_DIR }}
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ${{ env.APP_DIR }}
      - name: Reek
        run: bin/reek

  tests:
    needs: [lint, reek]
    uses: ./.github/workflows/ruby-unit-tests.yml
    with:
      rspec_task: bin/rspec-unit --profile 10
      upload_coverage: true
    secrets:
      QLTY_COVERAGE_TOKEN: ${{ secrets.QLTY_COVERAGE_TOKEN }}
  e2e_tests:
    permissions:
      contents: read
    needs: [lint, reek]
    uses: ./.github/workflows/ruby-e2e-tests.yml
    with:
      rspec_task: bin/rspec-e2e --profile 10
  upsert_screenshots_comment:
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    needs: [e2e_tests]
    runs-on: ubuntu-latest
    steps:
      - id: table
        uses: actions/github-script@v7
        with:
          script: |
            const labels = JSON.parse(${{ toJSON(needs.e2e_tests.outputs.locales_labels_json) }});
            const { data } = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
              per_page: 100
            });

            const rows = [];
            for (const a of data.artifacts) {
              if (!a.name.startsWith("app-screenshots-")) continue;
              const code = a.name.replace("app-screenshots-", "");
              const label = labels[code] ?? code;
              const safeLabel = label.replace(/\(/g, "\\(").replace(/\)/g, "\\)");
              const uiUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}/artifacts/${a.id}`;
              rows.push(`| ${code} | [${safeLabel}](${uiUrl}) |`);
            }

            const table = rows.length
              ? `| Locale | Link |\n| ------ | ---- |\n${rows.join("\n")}`
              : "_No app screenshots were uploaded._";

            core.setOutput("table", table);
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          header: ðŸ“¸ MatViews Admin App Screenshots
          message: |
            App screenshots from the latest e2e test run are available.

            | Name | Link |
            | ---- | ---- |
            | Commit | ${{ github.event.pull_request.head.sha }} |
            | Workflow | ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }} |

            ## App Screenshots
            ${{ steps.table.outputs.table }}
