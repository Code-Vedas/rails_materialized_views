name: Ruby Tests
on:
  workflow_call:
    inputs:
      rspec_task:
        required: true
        type: string
        description: Command to run tests (e.g., bin/rspec-unit or bin/rspec-e2e)
    outputs:
      locales_matrix_json:
        description: JSON for strategy.matrix (includes slug & label)
        value: ${{ jobs.discover_locales.outputs.locales_matrix_json }}
      locales_labels_json:
        description: JSON map of code -> display label
        value: ${{ jobs.discover_locales.outputs.locales_labels_json }}
permissions:
  contents: read
env:
  RUBY_VERSION: 3.4.3
  APP_DIR: ${{ github.workspace }}/mat_views
jobs:
  discover_locales:
    runs-on: ubuntu-latest
    outputs:
      locales_matrix_json: ${{ steps.discover.outputs.matrix }}
      locales_labels_json: ${{ steps.discover.outputs.labels }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ${{ env.APP_DIR }}
      - name: Discover locales from Engine
        id: discover
        working-directory: ${{ env.APP_DIR }}
        run: |
          bundle exec ruby -rjson -e '
            require_relative "spec/dummy/config/environment"
            mapping = MatViews::Engine.locale_code_mapping
            include = mapping.map { |code, label| { "slug" => code, "label" => label } }
            matrix = { "include" => include }
            puts "matrix=#{matrix.to_json}"
            puts "labels=#{mapping.to_json}"
          ' >> "$GITHUB_OUTPUT"
  test:
    runs-on: ubuntu-latest
    services:
      firefox:
        image: selenium/standalone-firefox:latest
        ports: [4444:4444]
        options: >-
          --add-host=host.docker.internal:host-gateway
          --health-cmd="/opt/bin/check-grid.sh || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports: [5432:5432]
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            build-essential git libpq-dev libyaml-dev pkg-config
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ${{ env.APP_DIR }}
      - name: Cache Bootsnap
        uses: actions/cache@v4
        with:
          path: ${{ env.APP_DIR }}/spec/dummy/tmp/cache
          key: bootsnap-${{ runner.os }}-${{ env.RUBY_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
      - name: Prepare database
        working-directory: ${{ env.APP_DIR }}
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          bin/rails db:drop || true
          bin/rails db:create
          bin/rails db:schema:load
      - name: Run e2e tests
        working-directory: ${{ env.APP_DIR }}
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub
        run: ${{ inputs.rspec_task }}
      - name: Upload error screenshots artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: ${{ env.APP_DIR }}/spec/dummy/tmp/screenshots
          if-no-files-found: ignore
  app_screenshots:
    runs-on: ubuntu-latest
    needs: [discover_locales]
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.discover_locales.outputs.locales_matrix_json) }}
    services:
      firefox:
        image: selenium/standalone-firefox:latest
        ports: [4444:4444]
        options: >-
          --add-host=host.docker.internal:host-gateway
          --health-cmd="/opt/bin/check-grid.sh || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports: [5432:5432]
        options: >-
          --mount type=tmpfs,destination=/var/lib/postgresql/data
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Install apt packages
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y \
            build-essential git libpq-dev libyaml-dev pkg-config
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: ${{ env.APP_DIR }}
      - name: Cache Bootsnap
        uses: actions/cache@v4
        with:
          path: ${{ env.APP_DIR }}/spec/dummy/tmp/cache
          key: bootsnap-${{ runner.os }}-${{ env.RUBY_VERSION }}-${{ hashFiles('**/Gemfile.lock') }}
      - name: Prepare database
        working-directory: ${{ env.APP_DIR }}
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          bin/rails db:drop || true
          bin/rails db:create
          bin/rails db:schema:load
      - name: Take app screenshots for locale ${{ matrix.slug }}
        working-directory: ${{ env.APP_DIR }}
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
          SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub
          SCREENSHOT_LANG: ${{ matrix.slug }}
        run: |
          bin/rspec-app-screenshot
      - name: Upload app screenshots artifact for locale ${{ matrix.slug }}
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-screenshots-${{ matrix.slug }}
          path: ${{ env.APP_DIR }}/spec/dummy/tmp/app-screenshots/${{ matrix.slug }}
          if-no-files-found: ignore
